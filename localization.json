{
  "en": {
    "roleOne": "${Role.ONE()}",
    "shift": "Leigh:",
    "startShift": "Start Shift",
    "served": "Served:",
    "potato": "Potato:",
    "money": "Money:",
    "newGamePrompt": "Click again to start a New Game...",
    "floatStockMarket": "Float on Stock Market<br>${price()}",
    "autoShiftUpgradeDisabled": "Auto Shift Start Upgrade<br>DISABLED",
    "autoShiftUpgradeEnabled": "Auto Shift Start Upgrade<br>ENABLED",
    "congratulations": "Congratulations, You Won!",
    "endOfShift": "End Of Shift ${getShiftCounter()}",
    "potatoesNextShift": "Potatoes for next shift: ${(getActualPotatoesInStorage() + Math.min((getActualPotatoesInStorage() + getSpudsToAddToShift()), getPotatoStorageQuantity())) - getActualPotatoesInStorage()} to be delivered = ${Math.abs(getActualPotatoesInStorage() - Math.min((getActualPotatoesInStorage() + getSpudsToAddToShift()), getPotatoStorageQuantity()))}",
    "maxStorageReached": " (due to max storage reached)",
    "promotionMessage": "You were Promoted to ${getElements().playerRoleText.innerText}!<br><br>",
    "investmentReturns": "Your investments of ${formatToCashNotation(getAmountInvestmentCash())} returned ${formatToCashNotation(getCurrentValueOfInvestment())} at a risk level of ${getAmountInvestmentRisk()}%",
    "investmentGrowth": "A growth of ${formatToCashNotation(getGrowthInvestment())} this period",
    "investmentLoss": "A loss of ${formatToCashNotation(Math.abs(getGrowthInvestment()))} this period",
    "totalInvestmentGrowth": "A total growth of ${formatToCashNotation(getCurrentValueOfInvestment() - getAmountInvestmentCash())}",
    "totalInvestmentLoss": "A total loss of ${formatToCashNotation(Math.abs(getCurrentValueOfInvestment() - getAmountInvestmentCash()))}",
    "clickAgainNewGame": "Click again to start a New Game...",
    "currentCash": "Current Cash: ${currentCash()}",
    "cashInvested": "Cash Invested:",
    "currentRisk": "Current Risk:",
    "currentValue": "Current Value:",
    "gainLoss": "Gain / Loss:",
    "withdrawAll": "Withdraw All:",
    "gainedAShiftPoint": "You gained a shift point!",
    "shiftPoints": "Your total shift points are ${getShiftPoints()}",
    "shiftPointsPartial": "Your total shift points are ",
    "noShiftPoints": "No Shift Points!",
    "spinWheel": "Spin the Wheel",
    "startedFinalShift": "Started Final Shift!",
    "beatTheGame": "You have beat the game! Well Done!",
    "youEarnedATotalOf": "You earned a total of ${formatToCashNotation(getTotalEarnedInSales())} in chip sales!",
    "youSpentATotalOf": "You spent a total of ${formatToCashNotation(getTotalSpentExcludingInvestments())} excluding investments!",
    "youPeeledATotalOf": "You peeled a total of ${getTotalPeeled()} potatoes.",
    "youCutATotalOf": "You cut a total of ${getTotalCut()} chips.",
    "youWastedATotalOf": "You wasted a total of ${getTotalWastedChips()} chips.",
    "youServedATotalOf": "You served a total of ${getTotalServedCustomers()} customers!",
    "nowDoTheHonours": "Now please do the honours and fry up and serve the last customer their chips before you retire as a millionaire!",
    "earnings": "Earnings: ${formatToCashNotation(getCurrentCash() - getOldCash())} this shift + ${formatToCashNotation(getOldCash())} in bank = ${formatToCashNotation(getCurrentCash())}",
    "customersServed": "Customers Served: ${getCustomersServed()}<br>",
    "potatoesPeeled": "Potatoes Peeled: ${getPotatoesPeeledThisShift()}",
    "chipsCut": "Chips Cut: ${getChipsCutThisShift()}",
    "chipsFried": "Chips Fried: ${getChipsFriedThisShift()}",
    "chipsWastedThisShift": "Chips Wasted This Shift: ${getChipsWastedThisShift()}",
    "customerWalkouts": "Customer Walkouts: ${getCustomersWaitingBeforeEndOfShift() - getCustomersWaiting()}",
    "customersStillWaiting": "Customers Still Waiting: ${getCustomersWaiting()}",
    "cappedAutoPeeler": "Capped: ${getCapAutoPeeler()}/s",
    "cappedAutoChipper": "Capped: ${getCapAutoChipper()}/s",
    "cappedAutoFryer": "Capped: ${getCapAutoFryer()}s<br> Ready in ${Math.floor(getCurrentSpeedAutoFryer())}s",
    "cappedAutoStorageCollector": "Capped: ${getCapAutoStorageCollector()}s<br> Ready in ${Math.floor(getCurrentSpeedAutoStorageCollector())}s",
    "cappedAutoCustomerServer": "Capped: ${getCapAutoCustomerServer()}s<br> Ready in ${Math.floor(getCurrentSpeedAutoCustomerServer())}s",
    "cappedPotatoCapacity": "Capped: ${getCapPotatoCapacity()}",
    "cappedFryerCapacity": "Capped: ${getCapFryerCapacity()}",
    "cappedFryerSpeed": "Capped: ${getCapFryerSpeed()}s",
    "cappedMaxDelivery": "Capped: ${getCapMaxDelivery()}",
    "cappedMaxWaitCustomer": "Capped: ${getCapMaxWaitCustomer()}s"
  },
  "es": {
    "roleOne": "${Role.ONE()}",
    "shift": "Leigh:",
    "startShift": "Comenzar turno",
    "served": "Servido:",
    "potato": "Papa:",
    "money": "Dinero:",
    "newGamePrompt": "Haga clic nuevamente para iniciar un nuevo juego...",
    "floatStockMarket": "Flotar en el mercado de valores<br>${price()}",
    "autoShiftUpgradeDisabled": "Inicio de turno automático<br>DESHABILITADA",
    "autoShiftUpgradeEnabled": "Inicio de turno automático<br>HABILITADA",
    "congratulations": "¡Felicidades, has ganado!",
    "endOfShift": "Fin del turno ${getShiftCounter()}",
    "potatoesNextShift": "Papas para el próximo turno: ${(getActualPotatoesInStorage() + Math.min((getActualPotatoesInStorage() + getSpudsToAddToShift()), getPotatoStorageQuantity())) - getActualPotatoesInStorage()} para entregar = ${Math.abs(getActualPotatoesInStorage() - Math.min((getActualPotatoesInStorage() + getSpudsToAddToShift()), getPotatoStorageQuantity()))}",
    "maxStorageReached": " (debido a que se alcanzó el almacenamiento máximo)",
    "promotionMessage": "¡Has sido promovido a ${getElements().playerRoleText.innerText}!<br><br>",
    "investmentReturns": "Tus inversiones de ${formatToCashNotation(getAmountInvestmentCash())} devolvieron ${formatToCashNotation(getCurrentValueOfInvestment())} con un nivel de riesgo de ${getAmountInvestmentRisk()}%",
    "investmentGrowth": "Un crecimiento de ${formatToCashNotation(getGrowthInvestment())} en este período",
    "investmentLoss": "Una pérdida de ${formatToCashNotation(Math.abs(getGrowthInvestment()))} en este período",
    "totalInvestmentGrowth": "Un crecimiento total de ${formatToCashNotation(getCurrentValueOfInvestment() - getAmountInvestmentCash())}",
    "totalInvestmentLoss": "Una pérdida total de ${formatToCashNotation(Math.abs(getCurrentValueOfInvestment() - getAmountInvestmentCash()))}",
    "clickAgainNewGame": "Haga clic nuevamente para iniciar un nuevo juego...",
    "currentCash": "Dinero actual: ${currentCash()}",
    "cashInvested": "Dinero invertido:",
    "currentRisk": "Riesgo actual:",
    "currentValue": "Valor actual:",
    "gainLoss": "Ganancia / Pérdida:",
    "withdrawAll": "Retirar todo:",
    "gainedAShiftPoint": "¡Has ganado un punto de turno!",
    "shiftPoints": "Tus puntos totales de turno son ${getShiftPoints()}",
    "shiftPointsPartial": "Tus puntos totales de turno son ",
    "noShiftPoints": "¡No hay puntos de turno!",
    "spinWheel": "Gira la rueda",
    "startedFinalShift": "¡Comenzó el turno final!",
    "beatTheGame": "¡Has completado el juego! ¡Bien hecho!",
    "youEarnedATotalOf": "¡Has ganado un total de ${formatToCashNotation(getTotalEarnedInSales())} en ventas de patatas fritas!",
    "youSpentATotalOf": "¡Has gastado un total de ${formatToCashNotation(getTotalSpentExcludingInvestments())} excluyendo inversiones!",
    "youPeeledATotalOf": "¡Has pelado un total de ${getTotalPeeled()} papas!",
    "youCutATotalOf": "¡Has cortado un total de ${getTotalCut()} chips!",
    "youWastedATotalOf": "¡Has desperdiciado un total de ${getTotalWastedChips()} chips!",
    "youServedATotalOf": "¡Has servido un total de ${getTotalServedCustomers()} clientes!",
    "nowDoTheHonours": "¡Ahora, por favor, haz el honor de freír y servir al último cliente sus chips antes de retirarte como millonario!",
    "earnings": "Ganancias: ${formatToCashNotation(getCurrentCash() - getOldCash())} este turno + ${formatToCashNotation(getOldCash())} en el banco = ${formatToCashNotation(getCurrentCash())}",
    "customersServed": "Clientes Atendidos: ${getCustomersServed()}<br>",
    "potatoesPeeled": "Papas Peladas: ${getPotatoesPeeledThisShift()}",
    "chipsCut": "Papas Cortadas: ${getChipsCutThisShift()}",
    "chipsFried": "Papas Fritas: ${getChipsFriedThisShift()}",
    "chipsWastedThisShift": "Papas Desperdiciadas Este Turno: ${getChipsWastedThisShift()}",
    "customerWalkouts": "Clientes Que Se Fueron: ${getCustomersWaitingBeforeEndOfShift() - getCustomersWaiting()}",
    "customersStillWaiting": "Clientes Aún Esperando: ${getCustomersWaiting()}",
    "cappedAutoPeeler": "Máximo: ${getCapAutoPeeler()}/s",
    "cappedAutoChipper": "Máximo: ${getCapAutoChipper()}/s",
    "cappedAutoFryer": "Máximo: ${getCapAutoFryer()}s<br> Listo en ${Math.floor(getCurrentSpeedAutoFryer())}s",
    "cappedAutoStorageCollector": "Máximo: ${getCapAutoStorageCollector()}s<br> Listo en ${Math.floor(getCurrentSpeedAutoStorageCollector())}s",
    "cappedAutoCustomerServer": "Máximo: ${getCapAutoCustomerServer()}s<br> Listo en ${Math.floor(getCurrentSpeedAutoCustomerServer())}s",
    "cappedPotatoCapacity": "Máximo: ${getCapPotatoCapacity()}",
    "cappedFryerCapacity": "Máximo: ${getCapFryerCapacity()}",
    "cappedFryerSpeed": "Máximo: ${getCapFryerSpeed()}s",
    "cappedMaxDelivery": "Máximo: ${getCapMaxDelivery()}",
    "cappedMaxWaitCustomer": "Máximo: ${getCapMaxWaitCustomer()}s"
  }
}